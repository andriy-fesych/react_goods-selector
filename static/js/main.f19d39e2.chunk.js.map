{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","displayGoods","goods","res","join","split","lastIndexOf","basketTransfer","item","basket","setState","prevState","includes","filter","good","displayItem","className","classNames","selected","type","onClick","clearList","headerHandler","length","this","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,aAAe,SAACC,GACd,IAAMC,EAAMD,EAAME,KAAK,MAAMC,MAAM,IAInC,OAFAF,EAAIA,EAAIG,YAAY,MAAQ,OAErBH,EAAIC,KAAK,K,EAGlBG,eAAiB,SAACC,GAChB,IAAMC,EAAS,EAAKV,MAAMC,cAE1B,EAAKU,UAAS,SAACC,GAAD,MAAgB,CAC5BX,cAAeS,EAAOG,SAASJ,GAC3BG,EAAUX,cAAca,QAAO,SAACC,GAAD,OAAWA,IAASN,KADxC,sBAEPG,EAAUX,eAFH,CAEkBQ,S,EAIrCO,YAAc,SAACP,GACb,OACE,qBAEEQ,UAAWC,IACT,CAAEC,SAAU,EAAKnB,MAAMC,cAAcY,SAASJ,KAHlD,UAMGA,EANH,WAQE,wBACEW,KAAK,SACLC,QAAS,kBAAO,EAAKb,eAAeC,IAFtC,SAKI,EAAKT,MAAMC,cAAcY,SAASJ,GAC9B,SACA,aAdHA,I,EAqBXa,UAAY,WACV,EAAKX,SAAS,CAAEV,cAAe,M,EAGjCsB,cAAgB,WACd,IAAMpB,EAAQ,EAAKH,MAAMC,cAEzB,OAAqB,IAAjBE,EAAMqB,OACD,oBAGY,IAAjBrB,EAAMqB,OACF,GAAN,OAAWrB,EAAX,gBAGI,GAAN,OAAW,EAAKD,aAAaC,GAA7B,kB,4CAGF,WAAU,IAAD,OACDA,EAAQsB,KAAKzB,MAAMC,cAEzB,OACE,sBAAKgB,UAAU,MAAf,UACE,6BACGQ,KAAKF,kBAGW,IAAjBpB,EAAMqB,OAEF,wBACEJ,KAAK,SACLC,QAASI,KAAKH,UAFhB,mBAQA,uBAGN,6BACGxB,EAAgB4B,KAAI,SAACX,GAAD,OACnB,EAAKC,YAAYD,e,GAzFXY,IAAMC,WAiGT7B,ICrHf8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f19d39e2.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Props = {};\n\ntype State = {\n  selectedGoods : string[],\n};\n\nclass App extends React.Component <Props, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  displayGoods = (goods: string[]) => {\n    const res = goods.join(', ').split('');\n\n    res[res.lastIndexOf(',')] = ' and';\n\n    return res.join('');\n  };\n\n  basketTransfer = (item: string) => {\n    const basket = this.state.selectedGoods;\n\n    this.setState((prevState) => ({\n      selectedGoods: basket.includes(item)\n        ? prevState.selectedGoods.filter((good) => (good !== item))\n        : [...prevState.selectedGoods, item],\n    }));\n  };\n\n  displayItem = (item: string) => {\n    return (\n      <li\n        key={item}\n        className={classNames(\n          { selected: this.state.selectedGoods.includes(item) },\n        )}\n      >\n        {item}\n        &#160;&#160;\n        <button\n          type=\"button\"\n          onClick={() => (this.basketTransfer(item))}\n        >\n          {\n            this.state.selectedGoods.includes(item)\n              ? 'Remove'\n              : 'Select'\n          }\n        </button>\n      </li>\n    );\n  };\n\n  clearList = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  headerHandler = () => {\n    const goods = this.state.selectedGoods;\n\n    if (goods.length === 0) {\n      return 'No goods selected';\n    }\n\n    if (goods.length === 1) {\n      return (`${goods} is selected`);\n    }\n\n    return (`${this.displayGoods(goods)} are selected`);\n  };\n\n  render() {\n    const goods = this.state.selectedGoods;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {this.headerHandler()}\n        </h1>\n        {\n          goods.length !== 0\n            ? (\n              <button\n                type=\"button\"\n                onClick={this.clearList}\n              >\n                Clear\n              </button>\n            )\n            : (\n              <br />\n            )\n        }\n        <ul>\n          {goodsFromServer.map((good) => (\n            this.displayItem(good)\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}